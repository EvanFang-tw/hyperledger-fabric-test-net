version: '3.2'

networks:
  elk-net:
    external: true

volumes:
  elasticsearch.elk:

services:
  elasticsearch.elk:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELK_VERSION}
    container_name: elasticsearch.elk
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch.elk
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: changeme
      discovery.type: single-node
    networks:
      - elk-net

  # logstash:
  #   container_name: logstash01
  #   build:
  #     context: logstash/
  #     args:
  #       ELK_VERSION: $ELK_VERSION
  #   volumes:
  #     - type: bind
  #       source: ./logstash/config/logstash.yml
  #       target: /usr/share/logstash/config/logstash.yml
  #       read_only: true
  #     - type: bind
  #       source: ./logstash/pipeline
  #       target: /usr/share/logstash/pipeline
  #       read_only: true
  #     - ./logs/:/etc/elk-logs/
  #   ports:
  #     - "5000:5000/tcp"
  #     - "5000:5000/udp"
  #     - "9600:9600"
  #   environment:
  #     LS_JAVA_OPTS: "-Xmx256m -Xms256m"
  #   networks:
  #     - elk
  #   depends_on:
  #     - elasticsearch

  kibana.elk:
    image: docker.elastic.co/kibana/kibana:$ELK_VERSION
    container_name: kibana.elk
    volumes:
      - type: bind
        source: ./kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - "5601:5601"
    networks:
      - elk-net
    depends_on:
      - elasticsearch.elk
  
  filebeat.elk:
    image: docker.elastic.co/beats/filebeat:$ELK_VERSION
    container_name: filebeat.elk
    user: root
    command: filebeat -e -strict.perms=false
    volumes:
      - ./filebeat/config/filebeat.docker.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: always
    depends_on:
      - elasticsearch.elk
    networks:
      - elk-net
